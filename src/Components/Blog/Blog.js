import React, { useEffect, useState } from "react";

const Blog = () => {
  const [box1, setBox1] = useState(false);
  const [box2, setBox2] = useState(false);
  const [box3, setBox3] = useState(false);
  const [box4, setBox4] = useState(false);
  useEffect(() => {
    document.title = "Blog - Yummi-Homemade";
  }, []);
  return (
    <div>
      <div>
        <title>FAQ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </div>
      <div>
        <img
          src="https://i.ibb.co/kJXFDw3/Curve-Yellow-Background-For-Free.jpg"
          alt="blue pattern background"
          className="absolute w-full h-64 md:h-96 object-center object-fit z-0"
        />
        <div className="relative flex flex-col items-center justify-center sm:px-0 px-6 z-20 pb-32">
          <div className="md:py-36 py-20">
            <h1 className="xl:text-6xl md:text-5xl text-xl font-bold leading-10 text-Black">
              Frequently asked questions
            </h1>
          </div>
          <div className="lg:w-1/2 md:w-8/12 sm:w-9/12 w-full">
            <div
              onClick={() => setBox1(!box1)}
              className="bg-white shadow rounded p-8"
            >
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-base font-semibold leading-none text-gray-800">
                    Difference between SQL and NoSQL?
                  </h2>
                </div>
                <button
                  onClick={() => setBox1(!box1)}
                  className="focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2 ring-offset-white cursor-pointer"
                >
                  {box1 ? (
                    <svg
                      role="button"
                      aria-label="close dropdown"
                      width="10"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 5L5 1L9 5"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  ) : (
                    <svg
                      width="10"
                      role="button"
                      aria-label="open dropdown"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 1L5 5L9 1"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </button>
              </div>

              {box1 && (
                <ul className="">
                  <li>
                    <p className="text-base leading-normal text-gray-600 mt-4 lg:w-[90%]">
                      SQL is the programming language used to interface with
                      relational databases. (Relational databases model data as
                      records in rows and tables with logical links between
                      them). NoSQL is a class of DBMs that are non-relational
                      and generally do not use SQL.
                    </p>
                  </li>
                </ul>
              )}
            </div>
            <div
              onClick={() => {
                setBox2(!box2);
              }}
              className="bg-white shadow rounded p-8 mt-8"
            >
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-base font-semibold leading-none text-gray-800">
                    What is JWT, and how does it work?
                  </h2>
                </div>
                <button
                  onClick={() => {
                    setBox2(!box2);
                  }}
                  data-menu
                  className="focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2 ring-offset-white cursor-pointer"
                >
                  {box2 ? (
                    <svg
                      role="button"
                      aria-label="close dropdown"
                      width="10"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 5L5 1L9 5"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  ) : (
                    <svg
                      width="10"
                      role="button"
                      aria-label="open dropdown"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 1L5 5L9 1"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </button>
              </div>
              {box2 && (
                <ul>
                  <li>
                    <p className="text-base leading-normal text-gray-600 mt-4 lg:w-[90%]">
                      JSON Web Token (JWT) is an open standard (RFC 7519) that
                      defines a compact and self-contained way for securely
                      transmitting information between parties as a JSON object.
                      This information can be verified and trusted because it is
                      digitally signed. <br />
                      JWTs are digitally signed using either a secret (HMAC) or
                      a public/private key pair (RSA or ECDSA) which safeguards
                      them from being modified by the client or an attacker.
                      Stored only on the client: You generate JWTs on the server
                      and send them to the client. The client then submits the
                      JWT with every request.
                    </p>
                  </li>
                </ul>
              )}
            </div>
            <div
              onClick={() => {
                setBox3(!box3);
              }}
              className="bg-white shadow rounded p-8 mt-8"
            >
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-base font-semibold leading-none text-gray-800">
                    What is the difference between javascript and NodeJS?
                  </h2>
                </div>
                <button
                  onClick={() => {
                    setBox3(!box3);
                  }}
                  data-menu
                  className="focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2 ring-offset-white cursor-pointer"
                >
                  {box3 ? (
                    <svg
                      role="button"
                      aria-label="close dropdown"
                      width="10"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 5L5 1L9 5"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  ) : (
                    <svg
                      width="10"
                      role="button"
                      aria-label="open dropdown"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 1L5 5L9 1"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </button>
              </div>
              {box3 && (
                <ul>
                  <li>
                    <p className="text-base leading-normal text-gray-600 mt-4 lg:w-[90%]">
                      JavaScript is a simple programming language that can be
                      used with any browser that has the JavaScript Engine
                      installed. Node. js, on the other hand, is an interpreter
                      or execution environment for the JavaScript programming
                      language. <br />
                      Javascript is a programming language that is used for
                      writing scripts on the website. NodeJS is a Javascript
                      runtime environment
                    </p>
                  </li>
                </ul>
              )}
            </div>
            <div
              onClick={() => setBox4(!box4)}
              className="bg-white shadow rounded p-8 mt-8"
            >
              <div className="flex items-center justify-between">
                <div>
                  <h2 className="text-base font-semibold leading-none text-gray-800">
                    How does NodeJS handle multiple requests at the same time?
                  </h2>
                </div>
                <button
                  onClick={() => setBox4(!box4)}
                  data-menu
                  className="focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2 ring-offset-white cursor-pointer"
                >
                  {box4 ? (
                    <svg
                      role="button"
                      aria-label="close dropdown"
                      width="10"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 5L5 1L9 5"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  ) : (
                    <svg
                      width="10"
                      role="button"
                      aria-label="open dropdown"
                      height="6"
                      viewBox="0 0 10 6"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 1L5 5L9 1"
                        stroke="#4B5563"
                        strokeWidth="1.5"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      />
                    </svg>
                  )}
                </button>
              </div>
              {box4 && (
                <ul>
                  <li>
                    <p className="text-base leading-normal text-gray-600 mt-4 lg:w-[90%]">
                      NodeJS receives multiple client requests and places them
                      into EventQueue. NodeJS is built with the concept of
                      event-driven architecture. NodeJS has its own EventLoop
                      which is an infinite loop that receives requests and
                      processes them.
                    </p>
                  </li>
                </ul>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Blog;
